<project name="junit-example">
  <property name="main.build.dir" value="build/main"/>
  <property name="main.src.dir" value="src/main/java"/>
  <property name="test.build.dir" value="build/test"/>
  <property name="test.src.dir" value="src/test/java"/>
  <property name="report.dir" value="report"/>
  <property name="bar.dir" value="bar"/>

  <path id="classpath.test">
    <pathelement location="lib/junit.jar"/>
    <pathelement location="lib/hamcrest-core-1.3.jar"/>
    <pathelement location="lib/json.jar"/>
    <pathelement location="${main.build.dir}"/>
  </path>

  <target name="build-deploy">
	 <copy todir="C:/Temp" flatten="true">
		<fileset dir="${bar.dir}">
		  <include name="**/*.bar"/>
		</fileset>
	  </copy>
  </target>
  
  <target name="compile">
    <mkdir dir="${main.build.dir}"/>
    <javac srcdir="${main.src.dir}" destdir="${main.build.dir}" includeantruntime="false"/>
  </target>

  <target name="test-compile" depends="build-deploy,compile">
    <mkdir dir="${test.build.dir}"/>
    <javac srcdir="${test.src.dir}" destdir="${test.build.dir}" includeantruntime="false">
        <classpath refid="classpath.test"/>
    </javac>
  </target>
  
  <target name="test-report" depends="test-compile">
    <mkdir dir="${report.dir}"/>
  </target>

  <target name="test" depends="test-report">
    <junit printsummary="on" haltonfailure="yes" fork="true">
        <classpath>
          <path refid="classpath.test"/>
          <pathelement location="${test.build.dir}"/>
        </classpath>
        <formatter type="brief" usefile="false" />
		<formatter type="xml" />
        <batchtest todir="${report.dir}">
            <fileset dir="${test.src.dir}" includes="**/*Test.java" />
        </batchtest>
    </junit>
  </target>
</project>